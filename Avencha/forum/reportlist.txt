[fix it~@Mon 05/08/2013 18:15:39.32]
Make evrything better it relly suks i hate it
the thing with the key is stupid the door doesnt work you are so retarted
[Wing~@Thu 08/08/2013 11:19:27.78]
-
|-Type in this: go through the door
|-And this happens: Environment variable $describe[ not defined
-


/<
[Wing~@Fri 09/08/2013 14:14:55.28]
|-A sequence of commands:
||>look
||There is a door in the wall.
||There is a fragile key on the floor.
||There is a box on the ground
||There is a handle on the box.
||>unlock the door with the key
||The key disintegrated
||The door unlocked :D
||>look
||There is an unlocked door in the wall.
|-Where'd the other stuff go?
-

/<
[Wing~@Mon 12/08/2013  8:47:33.24]
|-in the sync.bat, if you aren't connected to Jarvis's computer it says a sentence WHICH SHOULD CLEARLY END WITH AN EXCLAMATION MARK. PLEASE FIX.


/<
[Kpaiy~@Mon 12/08/2013  8:49:06.22]
==========
---BUGS---
==========

-There seems to be an issue with visibility.
	-In this bug, items seem to become invisible to the LOOK command
	-However, these invisible items can still me used
	-To recreate this bug:
		1. Program in two custom objects (e.g. acid_vial and trapdoor).
		2. Unlock the door with the fragile key (which becomes destroyed in the process).
		3. Use the LOOK command. Note how the two custom objects are not present.
		4. Growl in frustration.
	-Batch extract:
		You are in a room.
		There is a locked door in the wall.
		There is a fragile key on the floor.
		There is a solid trapdoor in the ground.
		There is a full acid_vial on a shelf.
		>look
		There is a locked door in the wall.
		There is a fragile key on the floor.
		There is a solid trapdoor in the ground.
		There is a full acid_vial on a shelf.
		>unlock the door with the key
		The key disintegrated.
		The door unlocked :D
		>look
		There is a unlocked door in the wall.
		>
	-I think this issue may be related to the destroy command (not sure though).
-There is also an issue with assigning an instrument to more than one event.
	-This issue may be due to my lack of coding skills
	-Code extract:
		rem ### Put room code here ###
		set place=room
		call :stencil trapdoor;protection{solid;melted}
		call :stencil acid_vial;condition{full;empty}
		
		call :output vialUsed The vial of acid is now empty.
		call :output trapdoorMelted The trapdoor is now melted open.
		call :output alreadyMelted The trapdoor has already been melted open.
		call :output doorAcidFull You aren't able to get any acid on the door.
		call :output doorAcidEmpty The vial of acid is empty.
		
		call :event melt trapdoor acid_vial if object.protection == solid {set object.protection = melted; set instrument.condition = empty; print vialUsed; print trapdoorMelted;} else {print alreadyMelted;}
		call :event melt door acid_vial if instrument.condition == full {print doorAcidFull;} else {print doorAcidEmpty;}
		
		call :object trapdoor in the ground;solid
		call :object acid_vial on a shelf;full
	-Game extract:
		You are in a room.
		There is a locked door in the wall.
		There is a fragile key on the floor.
		There is a solid trapdoor in the ground.
		There is a full acid_vial on a shelf.
		>melt the door with the acid_vial
		You aren't able to get any acid on the door.
		>melt the trapdoor with the acid_vial
		>
	-When the two lines of code are swapped with each other, the other line of code works
	-While the acid_vial works with the door, it does not work on the trapdoor, which is its main function.
	-When the :event melt door acid_vial line is removed, the acid_vial works as it should, however.
	-In other words, if two events include the same instrument, only the bottom line of the events including the same instruments work.
	-I am not sure what is causing this issue.
		
[Wing~@Thu 05/09/2013 14:21:02.34]
|-It doesn't say something like 'Nope.' or
||'You want the other .bat file' if you open
||language.bat, WHICH IT CLEARLY SHOULD.
|--/
|-You forgot a [the|a|any] in the Readme, in the
|Using Verbs section.
|--/
/

/<